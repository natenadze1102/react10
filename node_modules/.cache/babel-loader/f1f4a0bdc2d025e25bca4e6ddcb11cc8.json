{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useCounter = () => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n  useEffect(props => {\n    const interval = setInterval(() => {\n      setCounter(prevCounter => `${props.val === 'pos' ? prevCounter + 1 : prevCounter - 1}`);\n      console.log(props);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return counter;\n};\n\n_s(useCounter, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");\n\nexport default useCounter;","map":{"version":3,"names":["useState","useEffect","useCounter","counter","setCounter","props","interval","setInterval","prevCounter","val","console","log","clearInterval"],"sources":["C:/Users/G.Natenadze/Desktop/react10/src/components/hooks/use-counter.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useCounter = () => {\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    useEffect((props) => {\r\n        const interval = setInterval(() => {\r\n            setCounter((prevCounter) => `${props.val === 'pos' ? prevCounter + 1 : prevCounter - 1}`);\r\n            console.log(props)\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n    return counter\r\n}\r\n\r\nexport default useCounter;"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC;EAEAC,SAAS,CAAEI,KAAD,IAAW;IACjB,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BH,UAAU,CAAEI,WAAD,IAAkB,GAAEH,KAAK,CAACI,GAAN,KAAc,KAAd,GAAsBD,WAAW,GAAG,CAApC,GAAwCA,WAAW,GAAG,CAAE,EAA7E,CAAV;MACAE,OAAO,CAACC,GAAR,CAAYN,KAAZ;IACH,CAH2B,EAGzB,IAHyB,CAA5B;IAKA,OAAO,MAAMO,aAAa,CAACN,QAAD,CAA1B;EACH,CAPQ,EAON,EAPM,CAAT;EAQA,OAAOH,OAAP;AACH,CAZD;;GAAMD,U;;AAcN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}